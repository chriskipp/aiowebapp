#!/bin/sh

TORRC=/opt/tor/torrc

export http_proxy=127.0.0.1:8888

# EXIT NODE LOCATION --------------------------------------------------------------------------------------------------

cat $TORRC

if [ -n "${EXIT_NODE}" ]
then
    sed -i 's/# \(ExitNodes \){US}/\1'$EXIT_NODE'/' $TORRC
    sed -i 's/# \(StrictNodes\)/\1/' $TORRC
fi

# ---------------------------------------------------------------------------------------------------------------------

if [ -z "${IP_CHANGE_SECONDS}" ]; then IP_CHANGE_SECONDS=60; fi

# Send the Tor process a HUP signal periodically. This will cause it to get a fresh exit IP address.
#
(while true; do sleep ${IP_CHANGE_SECONDS}; echo "`date +'%Y/%m/%d %H:%M:%S'` 🔁 HUP → Tor."; killall -HUP tor; done) &

# ---------------------------------------------------------------------------------------------------------------------

exit_node_ip () {
    wget -q -Y on http://httpbin.org/ip -O - 2>/dev/null | grep origin | sed 's/"//g;s/  origin: //'
}

# Get current exit node IP address.
#
(while true; do sleep 60; echo "`date +'%Y/%m/%d %H:%M:%S'` 📌 exit IP: $(exit_node_ip)."; done) &

# ---------------------------------------------------------------------------------------------------------------------

# Options:
#
# - syslog
# - stdout
#
if [ -n "${LOG_NOTICE_TARGET}" ]
then
    sed -i 's/^\(Log notice\) syslog/\1 '$LOG_NOTICE_TARGET'/' $TORRC
fi

cat $TORRC

# ---------------------------------------------------------------------------------------------------------------------

exec /bin/su -s /bin/sh -c "/usr/bin/tor -f $TORRC" tor
