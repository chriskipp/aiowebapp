#######################################################################
# postgres:15.3-bullseye
#######################################################################
FROM postgres:15.3-bullseye

ENV DEBIAN_FRONTEND=noninteractive

ENV PG_VERSION=15
ENV POSTGRES_USER=postgres
ENV POSTGRES_PASSWORD="groEMUeKaaFUJpZxoJnC"
ENV POSTGRESQL_DATABASE=postgres
ENV POSTGRES_INITDB_ARGS="--auth-local=scram-sha-256 --auth-host=scram-sha-256"
ENV PGDATA=/var/lib/postgresql/data/pgdata
ENV PGCONFIG=/etc/postgres/postgresql.conf

# extensions
RUN apt-get update \
  && apt-get install --no-install-recommends --yes \
    postgresql-${PG_VERSION}-hypopg \
    postgresql-${PG_VERSION}-similarity \
    postgresql-${PG_VERSION}-cron \
    postgresql-${PG_VERSION}-postgis-3 \
    postgresql-${PG_VERSION}-postgis-3-scripts \
    postgresql-${PG_VERSION}-pgrouting 
#    postgresql-plpython3-${PG_VERSION} \
#    postgresql-${PG_VERSION}-pgq3 \
# && rm -rf /var/lib/apt/lists/*

# Buildutils
RUN apt-get update \
  && apt-get install --no-install-recommends --yes \
    cmake \
    curl \
    ca-certificates \
    build-essential \
    postgresql-server-dev-${PG_VERSION} \
    git \
    pkg-config \
    libbison-dev \
    flex \
    bison \
    libcurl4-gnutls-dev \
    libreadline-dev \
    gzip \
    zlib1g zlib1g-dev \
    libicu-dev \
#
  && printf '%s\n' "Installing uriparser" \
  && curl -L 'https://github.com/uriparser/uriparser/releases/download/uriparser-0.9.7/uriparser-0.9.7.tar.gz' \
    | tar -xzf - \
  && cd uriparser-0.9.7 \
  && mkdir build \
  && cd build \
  && cmake -DCMAKE_BUILD_TYPE=Release -DURIPARSER_BUILD_DOCS=OFF -DCMAKE_INSTALL_PREFIX=/usr -DURIPARSER_BUILD_TESTS=OFF .. \
  && make \
  && make install \
  && cd - \
  && rm -rf uriparser-0.9.7 \
#
  && printf '%s\n' "Installing pguri" \
  && git clone https://github.com/petere/pguri \
  && cd pguri && make && make install \
  && cd - && rm -rf pguri \
#
  && printf '%s\n' "Installing pgsql-http" \
  && git clone https://github.com/pramsey/pgsql-http \
  && cd pgsql-http && make && make install \
  && cd - && rm -rf pgsql-http \
#
  && printf '%s\n' "Installing bloom" \
  && git clone https://github.com/postgres/postgres \
  && cd postgres \
  && ./configure --without-readline --without-zlib \
  && cd contrib/bloom \
  && make all && make install \
  && cd - && rm -rf postgres \
#
  && printf '%s\n' "Installing contrib" \
  && git clone https://github.com/postgres/postgres \
  && cd postgres \
  && ./configure \
  && cd contrib \
  && make all && make install \
  && cd - && rm -rf postgres \
#
  && printf '%s\n' "Installing plprofiler" \
  && git clone https://github.com/bigsql/plprofiler \
  && cd plprofiler && USE_PGXS=1 make install \
  && cd - && rm -rf plprofiler \
#
  && printf '%s\n' "Removing build dependencies" \
  && apt-get purge --yes \
    libgtest-dev \
    cmake \
    ca-certificates \
    build-essential \
    postgresql-server-dev-${PG_VERSION} \
    git \
    pkg-config \
    libbison-dev \
    flex \
    bison \
  && apt-get autoremove --yes \
  && rm -rf /var/lib/apt/lists/*

RUN apt-get update \
  && apt-get install --no-install-recommends --yes \
    curl \
    ca-certificates \
    build-essential \
    postgresql-server-dev-${PG_VERSION} \
    git \
    pkg-config \
    libcurl4-gnutls-dev \
    automake autoconf libtool \
  && git clone https://github.com/openvenues/libpostal \
  && cd libpostal \
  && ./bootstrap.sh \
  && ./configure \
  && ( make || make || : ) \
  && make install \
  && cd - && rm -rf libpostal \
  && git clone https://github.com/pramsey/pgsql-postal \
  && cd pgsql-postal \
  && make && make install \
  && cd - && rm -rf pgsql-postal \
  && apt-get purge --yes \
    curl \
    ca-certificates \
    build-essential \
    postgresql-server-dev-${PG_VERSION} \
    git \
    pkg-config \
    libcurl4-gnutls-dev \
    automake autoconf libtool \
  && apt-get autoremove --yes \
  && rm -rf /var/lib/apt/lists/*

COPY ./initdb /docker-entrypoint-initdb.d

